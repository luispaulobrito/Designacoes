{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatTabGroup } from '@angular/material/tabs';\nimport { Publicador } from './publicador';\nimport { Validators } from '@angular/forms';\nlet PublicadorComponent = class PublicadorComponent {\n  constructor(service, fb) {\n    this.service = service;\n    this.fb = fb;\n    this.publicadores = [];\n    this.colunas = ['id', 'nome', 'sexo', 'flBatismo', 'perfil', 'publicadorTipo', 'observacao', 'acoes'];\n    this.publicadorSelecionado = new Publicador('', '', false, '', '', '');\n    this.formulario = this.fb.group({});\n    this.publicadorSelecionado = new Publicador('', '', false, '', '', '');\n  }\n  ngOnInit() {\n    this.montarFormulario();\n    this.listarPublicadores();\n  }\n  montarFormulario() {\n    this.formulario = this.fb.group({\n      nome: ['', Validators.required],\n      sexo: ['', Validators.required],\n      flBatismo: ['', Validators.required],\n      perfil: ['', Validators.required],\n      publicadorTipo: ['', Validators.required],\n      observacao: ['', Validators.required]\n    });\n  }\n  listarPublicadores() {\n    this.service.list().subscribe(response => {\n      this.publicadores = response;\n    });\n  }\n  submit() {\n    const publicador = this.formulario.value;\n    if (!this.publicadorSelecionado) {\n      this.service.save(publicador).subscribe(() => {\n        this.formulario.reset();\n        this.listarPublicadores();\n      });\n    } else {\n      publicador.id = this.publicadorSelecionado.id;\n      this.service.atualizar(publicador).subscribe(() => {\n        this.formulario.reset();\n        this.publicadorSelecionado;\n        this.listarPublicadores();\n      });\n    }\n  }\n  excluir(publicador) {\n    this.service.deletar(publicador).subscribe(() => {\n      this.publicadores = this.publicadores.filter(p => p !== publicador);\n    });\n  }\n  editar(publicador) {\n    this.publicadorSelecionado = publicador;\n    this.formulario.patchValue(publicador);\n    this.tabGroup.selectedIndex = 1;\n  }\n  atualizar() {\n    const formValues = this.formulario.value;\n    const publicador = new Publicador(formValues.nome, formValues.sexo, formValues.flBatismo, formValues.perfil, formValues.publicadorTipo, formValues.observacao);\n    this.service.atualizar(publicador).subscribe(resposta => {\n      const index = this.publicadores.findIndex(p => p.id === publicador.id);\n      this.publicadores[index] = resposta;\n      this.publicadorSelecionado;\n    });\n  }\n};\n__decorate([ViewChild(MatTabGroup)], PublicadorComponent.prototype, \"tabGroup\", void 0);\nPublicadorComponent = __decorate([Component({\n  selector: 'app-publicador',\n  templateUrl: './publicador.component.html',\n  styleUrls: ['./publicador.component.css']\n})], PublicadorComponent);\nexport { PublicadorComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","MatTabGroup","Publicador","Validators","PublicadorComponent","constructor","service","fb","formulario","group","publicadorSelecionado","ngOnInit","montarFormulario","listarPublicadores","nome","required","sexo","flBatismo","perfil","publicadorTipo","observacao","list","subscribe","response","publicadores","submit","publicador","value","save","reset","id","atualizar","excluir","deletar","filter","p","editar","patchValue","tabGroup","selectedIndex","formValues","resposta","index","findIndex","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Luis Paulo\\Documents\\Projetos GitHub\\Designações\\designacoes-app\\src\\app\\publicador\\publicador.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\nimport { PublicadorService } from '../publicador.service';\r\nimport { Publicador } from './publicador';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-publicador',\r\n  templateUrl: './publicador.component.html',\r\n  styleUrls: ['./publicador.component.css']\r\n})\r\nexport class PublicadorComponent implements OnInit {\r\n  @ViewChild(MatTabGroup) tabGroup!: MatTabGroup;\r\n\r\n  formulario: FormGroup;\r\n  publicadores: Publicador[] = [];\r\n  colunas = ['id','nome','sexo','flBatismo','perfil','publicadorTipo','observacao', 'acoes'];\r\n  publicadorSelecionado: Publicador = new Publicador('', '', false, '', '', '');\r\n\r\n  constructor(\r\n    private service : PublicadorService,\r\n    private fb : FormBuilder\r\n  ){\r\n    this.formulario = this.fb.group({});\r\n    this.publicadorSelecionado = new Publicador('', '', false, '', '', '');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.montarFormulario();\r\n    this.listarPublicadores();\r\n  }\r\n\r\n  montarFormulario(){\r\n    this.formulario = this.fb.group({\r\n      nome : ['', Validators.required],\r\n        sexo : ['', Validators.required],\r\n        flBatismo : ['', Validators.required],\r\n        perfil : ['', Validators.required],\r\n        publicadorTipo : ['', Validators.required],\r\n        observacao : ['', Validators.required],\r\n    })\r\n  }\r\n\r\n  listarPublicadores(){\r\n    this.service.list().subscribe(response => {\r\n      this.publicadores = response;\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    const publicador = this.formulario.value as Publicador;\r\n    if (!this.publicadorSelecionado) {\r\n      this.service.save(publicador).subscribe(() => {\r\n        this.formulario.reset();\r\n        this.listarPublicadores();\r\n      });\r\n    } else {\r\n      publicador.id = this.publicadorSelecionado.id;\r\n      this.service.atualizar(publicador).subscribe(() => {\r\n        this.formulario.reset();\r\n        this.publicadorSelecionado;\r\n        this.listarPublicadores();\r\n      });\r\n    }\r\n  }\r\n  \r\n  excluir(publicador: Publicador){\r\n    this.service.deletar(publicador).subscribe(() => {\r\n      this.publicadores = this.publicadores.filter(p => p !== publicador);\r\n    });\r\n  }\r\n  \r\n  editar(publicador: Publicador): void {\r\n    this.publicadorSelecionado = publicador;\r\n    this.formulario.patchValue(publicador);\r\n    this.tabGroup.selectedIndex = 1;\r\n  }\r\n\r\n  atualizar(){\r\n    const formValues = this.formulario.value\r\n    const publicador : Publicador = new Publicador(formValues.nome, formValues.sexo, formValues.flBatismo, formValues.perfil, formValues.publicadorTipo, formValues.observacao)\r\n    this.service.atualizar(publicador).subscribe(resposta => {\r\n      const index = this.publicadores.findIndex(p => p.id === publicador.id);\r\n      this.publicadores[index] = resposta;\r\n      this.publicadorSelecionado;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}